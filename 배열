-정의
public class DefineGroup {

	public static void main(String[] args) {
		
		String[] classGroup = {"최진혁", "최유빈", "한이람", "이고잉"};		
		//문자열로 구성된 배열이 classGroup에 저장된다.
		//연관된 정보들을 그룹핑하는것이 배열의 목적
	}

}

-인덱스
public class GetDemo {

	public static void main(String[] args) {
		String[] classGroup = { "최진혁", "최유빈", "한이람", "이고잉" };
        System.out.println(classGroup[0]);
        System.out.println(classGroup[1]);
        System.out.println(classGroup[2]);
        System.out.println(classGroup[3]);
	}

}

-배열길이
public class LengthDemo {

	public static void main(String[] args) {
		
		String[] classGroup = new String[4];
        classGroup[0] = "최진혁";
        System.out.println(classGroup.length);
        // *.length = 배열의 길이
        classGroup[1] = "최유빈";
        System.out.println(classGroup.length);
        classGroup[2] = "한이람";
        System.out.println(classGroup.length);
        classGroup[3] = "이고잉";
        System.out.println(classGroup.length);
		
	}

}

-배열사용
public class ArrayLoopDemo {

	public static void main(String[] args) {
		String[] members = { "최진혁", "최유빈", "한이람" };
        for (int i = 0; i < members.length; i++) {
            String member = members[i];
            System.out.println(member + "이 상담을 받았습니다");
        }
        //for(초기화;반복조건;반복실행)
	}

}

-for-each
public class ForeachDemo {

	public static void main(String[] args) {
		String[] members = { "최진혁", "최유빈", "한이람" };
        for (String e : members) {
        // :뒤에 따라오는 값들을 하나씩 꺼내서 e라는 변수에 담아준다.
            System.out.println(e + "이 상담을 받았습니다");
        }
	}

}
